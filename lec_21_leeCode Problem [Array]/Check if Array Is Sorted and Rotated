
1752. Check if Array Is Sorted and Rotated
***************************************************
Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero).
Otherwise, return false.

There may be duplicates in the original array.
Input: nums = [3,4,5,1,2]
Output: true

Input: nums = [2,1,3,4]
Output: false
*****************************************************

public class lec_21_leeCode_ProblemPart_2 {
    static boolean rotateArray(int[]nums){
        int n = nums.length;
        int count = 0;

          for (int i = 1; i < n; i++) {
              if(nums[i -1] > nums[i]){
                  count++;
              }
          }
          if(nums[n -1] > nums[0]){
              count++;
          }
          return count <= 1;

    }

    public static void main(String[] args) {
        int[] nums =  {1,2,3,4,5,6}; // return true
        int[] nums2 = {2, 1, 3, 4}; // return false

        boolean result = rotateArray(nums);
        boolean result2 = rotateArray(nums2);

        System.out.println(result);
        System.out.println(result2);

    }
}



// >>>>>>>>>>>>>> 2nd method <<<<<<<<<<<<<<<<<

class Solution {
    public boolean check(int[] nums) {
    int c = 0;
    for(int i = 0;i < nums.length; i++){
        if(nums[i] > nums[(i+1)%nums.length]){
            c++;
        }
        if(c > 1){
            return false;
        }
    }
    return true;
        
    }
}


